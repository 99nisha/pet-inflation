library(dplyr)
library(lubridate)
library(forecast)
library(ggplot2)
library(tidyr)
library(scales)
library(zoo)

# --- Prepare data ---
df <- as.data.frame(dataset) %>%
  filter(DataSource == "CPI_Pet") %>%
  mutate(
    Year = as.numeric(as.character(Year)),
    Month = ifelse(is.character(Month) | is.factor(Month),
                   match(substr(as.character(Month), 1, 3), month.abb),
                   as.numeric(Month)),
    Date = make_date(Year, Month, 1)
  ) %>%
  filter(Date >= as.Date("2016-01-01"), Date <= as.Date("2024-12-31")) %>%
  arrange(Date)

# --- Fill missing months ---
all_months <- data.frame(Date = seq(min(df$Date), max(df$Date), by = "month"))
df <- all_months %>%
  left_join(df, by = "Date")

# Fill any gaps by linear interpolation
df$Value <- zoo::na.approx(df$Value, na.rm = FALSE)

# --- Create monthly time series ---
ts_data <- ts(df$Value, start = c(year(min(df$Date)), month(min(df$Date))), frequency = 12)

# --- STL decomposition ---
decomp <- stl(ts_data, s.window = "periodic")

# --- Extract components ---
time_index <- time(ts_data)
date_seq <- as.Date(as.yearmon(time_index))

# Add original data ("observed") as another column
decomp_full <- data.frame(
  Date = date_seq,
  Data = as.numeric(ts_data),
  Seasonal = decomp$time.series[, "seasonal"],
  Trend = decomp$time.series[, "trend"],
  Remainder = decomp$time.series[, "remainder"]
)

# --- Reshape to long format for ggplot ---
decomp_df <- decomp_full %>%
  pivot_longer(-Date, names_to = "Component", values_to = "Value")

# --- Transparent Power BI plot ---
par(bg = "transparent")

ggplot(decomp_df, aes(x = Date, y = Value, color = Component)) +
  geom_line(size = 0.9) +
  facet_wrap(~ Component, ncol = 1, scales = "free_y") +
  scale_x_date(date_labels = "%Y", breaks = "1 year") +
  scale_color_manual(values = c(
    "Data" = "#F28E2C",
    "Seasonal" = "#7589DD",
    "Trend" = "#C04A4A",
    "Remainder" = "#56C8BF"
  )) +
  labs(x = "", y = "") +
  theme_minimal(base_size = 12) +
  theme(
    legend.position = "none",
    plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
    plot.subtitle = element_text(size = 10, hjust = 0.5, color = "gray40"),
    strip.text = element_text(size = 11, color = "#333333", hjust = 0),
    panel.grid.minor = element_blank(),
    panel.grid.major.x = element_line(color = "gray85", linetype = "dotted"),
    panel.grid.major.y = element_line(color = "gray85", linetype = "dotted"),
    axis.text = element_text(color = "gray20"),
    plot.background = element_rect(fill = "#F5F5F5", color = NA)
  )
